import CryptoJS from "crypto-js";

/**
 * Encrypts a text using a passphrase with AES.
 *
 * @param   {string} text Text to be encrypted.
 * @returns {string}      Encrypted text.
 */
const ENCRYPTATION_KEYS = {
    publicKey:
        "LS0tLS1CRUdJTiBQR1AgUFVCTElDIEtFWSBCTE9DSy0tLS0tDQpWZXJzaW9uOiBPcGVuUEdQLmpzIHY0LjIuMQ0KQ29tbWVudDogaHR0cHM6Ly9vcGVucGdwanMub3JnDQoNCnhzQk5CRndQZG1FQkNBREZZT25FbHNVRC9oSXhxOVYwNk8wZFVlZVh6cm9sdVdxMzhtUGNtNk90RFV4MQ0KMnJiNE12WU52Sk5Wc055UG5HeHppcXA5NDBJNkZTWkdwb2hvb3B5Y0RPckJuRFljTnVUaXcrdUFIK0pUDQorUTVyNXM4Vk1HdFJGZVhDMGtFZjc1NWVleHpsbkxBVXd6WFhCWnZiZ3JIMVdIYk5MT1d3Sy9EZVNKa3oNCkhQUDZWOGVYUlduOXJvQmNzSUJOT1BXUndNYzNjelRjYUVKNm1Ia1RjVEtjaVZ6VkFKeXgzekNFWGdhTw0KQmxaUCt2bTg0cU5MdFBaR01XMlJkNlV2eGJpcVZMN3JtVS9hOWFwVTM1REVCTStwbVFCcXVaM1BpNmJyDQpyMk1jM1MrODhLWndvdFBZTnpUVUNBNjFkVnBvR2JjQ0VJMHN4YUV5L1AzQ3hqdFV1M0M0L2tVaEFCRUINCkFBSE5FaUppWlc1QVpYUmxMV3h3TFdabGJtNTVJc0xBZFFRUUFRZ0FId1VDWEE5MllRWUxDUWNJQXdJRQ0KRlFnS0FnTVdBZ0VDR1FFQ0d3TUNIZ0VBQ2drUTRIWGc2eEE5Wm5DeUhnZi9kSGdNVVRXY2U0QnVrQjVODQpxdnpMTUc5UUNQNVlaOXN2WnlNQVhnV0pVZUJPaFlyRWpBRWtacSs4WldSTXFlanBPblc3M2VKR09YUWENClNoRFlvZTg4YXd2SHJ5MzJUKy9sQ21KZlJSNjF0bEVhK1FXZDY5bW44WmRaN2dKRXN4NFE1dFoyVXVDZQ0KZVd3cjZxTi9KMWI5Tis3WHdIcGJaTUZneVUvNzlZYnVwYVpxTjZob0hYaCtyYitUMnpTWkxMbXRGckwwDQordFBmMHBkZTMzck40UElNdWpPWGovanJITjBvaGxnTDhSNFA3NmFtZUNDVkNtU2dkRkhaemhucjErTFoNCkhmc0JwL0lCZlJKdENZU1ptd1FGUjFNOEcvSjVMQjVNK09ROW1yVmhicFkvRmk3SHc0d0ZoZnRoVkFPbA0KUEkvaGtsUlBoKzBtMkZ3WGlMd3FrQ2E4VU03QVRRUmNEM1poQVFnQXRFRGhySkd4eWQxWUlkT2JBZ0xmDQpLamZQVUV4bWFta3dKMWRGRHR1TmJ4NzhWbElrOVh1ZDR4cFVVRmdDTzR2aG82bUE5U0VDdno3Q2FpMUQNCmh1dTQweU1zR08wYnJBdVRGM0hYSjg5bmU0Z1ozbjNyd0lsZnVacUVjV09nTDV6M3lHaVd3M2xBUEc1Zg0KOHZDakMybExsczY0M0pCaUxHemtVQmpvdS83Zk5iZVNHOFdFNlVKVGx3enpKQ2RMa3k4T2NENWgyTktxDQo0UnpHWmgySWsrNjMwSzZZLzhhOEVaTUEySkRlKzdTVEZ4dER1M3ZPQkRxem1PU2dSSU1OczRZVDVKcXcNCldsN0NqT1lBaW1OcmNsSThHMVd3V0hrYkZlaW15Ly9SY0EwR2hKc3JNeUV1bjBOeEFzQ3NDS3BRR205bg0KMmk2SnVnWDBSbEk0LzFsSGhlNFlwd0FSQVFBQndzQmZCQmdCQ0FBSkJRSmNEM1poQWhzTUFBb0pFT0IxDQo0T3NRUFdad3JJQUlBTDRaSzNaeGFXVWpvb2g1Qlovc2xmZVhsN2ZXYVZFLzZWVnJ2TEdOSlJBSmRsS3INCmNrdmZObmtSR2hVMFhteFFTMzBCREVrL0dnR2dEbjhxek5VeFJHQWNpTldIbHNwejdTUU82cG9pcjViTQ0KTUlDL2U0KzhUVm51R1RmT1Z6cDNVMkc4ejFlM2UrOFEyMnAwMXZwUkZKY1pjUmtQVkZvRHFKK0dIMVZGDQpMQXBaVUQyT09pbnoyWTVneHFTK1JXeFAyNk90SnlWMXRIdlFDSEZpVEpIOGZkWUhHVmdsN29sTktpWWINCjNocFhEUUpKcnI0NzIvNzNUdU1id0FyK3MrYWx4eDgwczVud2pVTEJRbWJFSUl6M25lQTN3Nkp6M2RYaw0KL3hLMUg0Vi9SYUxqMGZGZHhtbjZVbFI0ZEZsLzJ4UHduVE0wSDhid2gyM2FqLzBVUzZPNmIzOD0NCj1naXFlDQotLS0tLUVORCBQR1AgUFVCTElDIEtFWSBCTE9DSy0tLS0tDQo=",
    privateKey:
        "LS0tLS1CRUdJTiBQR1AgUFJJVkFURSBLRVkgQkxPQ0stLS0tLQ0KVmVyc2lvbjogT3BlblBHUC5qcyB2NC4yLjENCkNvbW1lbnQ6IGh0dHBzOi8vb3BlbnBncGpzLm9yZw0KDQp4Y01HQkZ3UGRtRUJDQURGWU9uRWxzVUQvaEl4cTlWMDZPMGRVZWVYenJvbHVXcTM4bVBjbTZPdERVeDENCjJyYjRNdllOdkpOVnNOeVBuR3h6aXFwOTQwSTZGU1pHcG9ob29weWNET3JCbkRZY051VGl3K3VBSCtKVA0KK1E1cjVzOFZNR3RSRmVYQzBrRWY3NTVlZXh6bG5MQVV3elhYQlp2YmdySDFXSGJOTE9Xd0svRGVTSmt6DQpIUFA2VjhlWFJXbjlyb0Jjc0lCTk9QV1J3TWMzY3pUY2FFSjZtSGtUY1RLY2lWelZBSnl4M3pDRVhnYU8NCkJsWlArdm04NHFOTHRQWkdNVzJSZDZVdnhiaXFWTDdybVUvYTlhcFUzNURFQk0rcG1RQnF1WjNQaTZicg0KcjJNYzNTKzg4S1p3b3RQWU56VFVDQTYxZFZwb0diY0NFSTBzeGFFeS9QM0N4anRVdTNDNC9rVWhBQkVCDQpBQUgrQ1FNSTVpTzU2U0RCOFkvZ3FNK1RUY25GaWx6RWN2dzRxTjBkMnZCNm1JTDFMRVhWWUM1Q0RKTzUNCm1qTVhyaHZIYkhPS2Z2N0M3OHJhdFRrQ0NFWWxnZkpuQ3gwSHRSSGxCK3gvaFJEcnZpVWh5c3BXOE9SUg0KQURjR2lBa3FJNzFNSHhQRlI5U2pLUERaK0tOcWRoWXQyeDVzaVJWOUZFSUd3UzNVbU5KcXlJSHdFUXpSDQpyWVE3aThZcWNZUmEyWmpyb0lxMUNGUjFvMkpMRVlkUkJvdzM3MGhXZG5uNEV2UHlXeUs4SHRpTkFyWnQNClJjTXAweEh1NmVNSTZiWlVOaGVIVTdwbE82UllSUjlkZWpwUWxDaXZWZHltK1dFMFJiZUdiRTJNTWE4Rw0KWVhBQjErRzVHTnFmUjRPS3htUk14OVdsS1hKMDFBU0JxYWpsTG5IdmgvVnY2OE5oOTc5a25Zd3NZN2ZmDQpCeHJZMVRMZ0tFK2lRL2pYV3dLbmwxSm9HeXNUMkkxRlBuWVEyYzRiaFljWjlCUXljNjZKcHFvdEUvTk4NCkh1YmFBdzhYbkdLMnFhT0JuR0xadEIrU1NMVXYySU9va0hHL1A4Y1dnWDc5b2p4eTBDLy9TQXVkdkVreA0KQjl4N1ljSjhJY2dTMEhoQ1JiRGNIVEdhNXJsVlJ6UDhRaG1BbkRIRU5TZ3hnVmJIZy9nRUxBSUNFK2p1DQpDcS9oVW1FL0F0N2FtV0E5S2dqbytNeHF4SXBiTVZ5TXJEbExGRzIzRVdhU0VqL2wxNlBGbkwwekl3REwNCmNNQThmczdwL2F2M3h5ZW9lcC9HT3FKMFp5RG4wazVkd1d4ZzEzeTBnWHBpWmh4eTJzaG9iK203WlhKZQ0KYWpDL3JDZmFnNE1hVytMa3JRaFpFd2h1SzlWd0J6Ry9BRkJZUjQyNlBVRjRoYUFMckJtZkJpT3lSazMwDQo0U1plWW0zQTRzMlVyeUpoR2RSQUVHQmpGM2VUYXNYWWJ6ZThyUEFwWXhkYVkvamMyUVE1anNGNXdmSVcNClBtb1dyV01ldmI2OVc4OEswcnVYZlhYZkFyRkNZR3NSVkNiWWpmR0l6QWdPdGhONElyYVJDMHd0cWFvaQ0KVWpiK29GN1RVUzRFZDNjT2s1ckxDUGp2SWtTOFkrb3pQZmhKMUJUbW1nM0hONEh0a1B6U2RjOXhOQTJqDQpDL2hwS0hTQkRVandBS0tRZ3E1Ty8vODJXR1ROS0E0ZHpSSWlZbVZ1UUdWMFpTMXNjQzFtWlc1dWVTTEMNCndIVUVFQUVJQUI4RkFsd1BkbUVHQ3drSENBTUNCQlVJQ2dJREZnSUJBaGtCQWhzREFoNEJBQW9KRU9CMQ0KNE9zUVBXWndzaDRILzNSNERGRTFuSHVBYnBBZVRhcjh5ekJ2VUFqK1dHZmJMMmNqQUY0RmlWSGdUb1dLDQp4SXdCSkdhdnZHVmtUS25vNlRwMXU5M2lSamwwR2tvUTJLSHZQR3NMeDY4dDlrL3Y1UXBpWDBVZXRiWlINCkd2a0ZuZXZacC9HWFdlNENSTE1lRU9iV2RsTGdubmxzSytxamZ5ZFcvVGZ1MThCNlcyVEJZTWxQKy9XRw0KN3FXbWFqZW9hQjE0ZnEyL2s5czBtU3k1clJheTlQclQzOUtYWHQ5NnplRHlETG96bDQvNDZ4emRLSVpZDQpDL0VlRCsrbXBuZ2dsUXBrb0hSUjJjNFo2OWZpMlIzN0FhZnlBWDBTYlFtRW1ac0VCVWRUUEJ2eWVTd2UNClRQamtQWnExWVc2V1B4WXV4OE9NQllYN1lWUURwVHlQNFpKVVQ0ZnRKdGhjRjRpOEtwQW12RkRId3dZRQ0KWEE5MllRRUlBTFJBNGF5UnNjbmRXQ0hUbXdJQzN5bzN6MUJNWm1wcE1DZFhSUTdialc4ZS9GWlNKUFY3DQpuZU1hVkZCWUFqdUw0YU9wZ1BVaEFyOCt3bW90UTRicnVOTWpMQmp0RzZ3TGt4ZHgxeWZQWjN1SUdkNTkNCjY4Q0pYN21haEhGam9DK2M5OGhvbHNONVFEeHVYL0x3b3d0cFM1Yk91TnlRWWl4czVGQVk2THYrM3pXMw0Ka2h2RmhPbENVNWNNOHlRblM1TXZEbkErWWRqU3F1RWN4bVlkaUpQdXQ5Q3VtUC9HdkJHVEFOaVEzdnUwDQpreGNiUTd0N3pnUTZzNWprb0VTRERiT0dFK1Nhc0ZwZXdvem1BSXBqYTNKU1BCdFZzRmg1R3hYb3Bzdi8NCjBYQU5Cb1NiS3pNaExwOURjUUxBckFpcVVCcHZaOW91aWJvRjlFWlNPUDlaUjRYdUdLY0FFUUVBQWY0Sg0KQXdoNVBYdzFnYW5Nb2VDeXd2Y1AvZ0lBZUVhbUdLZk00T1RVOThiN2hTR1ViZVV5MXdhSGU3VFRMUHBSDQpjK3JGYUVvNzY4VnFGQytVbmFjaWtxV0JYdlZ4K1RCYVp1dDQzMFRkRjVRYlFyUkJENlV3WUQxVGlRcWwNCkZDOCszNU9JS1I1dzBUWGdQc0FiSnBxei9kcDloSjBVVmdHYk51Z0Y1Ulh3TXpTWjJ4RktzSTFlOGZzaw0KUWF2WmFIL0NVSEdVRk5vaDBhZjVqMGtvUzR4emY3RlJPTk1zd29WYzM2b21DTmlObFpZZi9JOFk2MnVmDQpWNGhEL2NicmNrOGQyRHBVY3pmU3lyeGVPVjU2bi9FNk8wZ2Y2UGkvalVPbkRzODlYMzRNclhwOVlMQU8NCkcyWXZoekVpZXhVaDNzU2gxc1A5R2c3OWtJMGNEVFcxMnBiUFdjQVRvVDNwTU1hRkgzaGU3d0YyZVJaRQ0KSnkyS3VqV21qR3dLWE5QYzQwT0s1d3cyeFJ1U2t5emhJemN0cEJVcWpEZEJlNjBoZzZaZW1lb0Q5NHB5DQpIenA2Yy9JemtIc3I0Y1NhY2Q2bVBNaWVhVThYcmpLSjJ4cWE2LytsNithbXhLVXZZaDRaMTgwS3QwWkQNCm1lV3RIOUpPc3RCN0syMm5INlNMT0pUWi9mRW9BTlBlOGFmSk1Zc0xnTDVWR0xXVHh5aVVhZ1Vpb1lUYQ0Kb3FkWWtpVTlsN251NzFNNWIyMzRnQXZITUJlZTBuc0JSemNDUS9BOEczQlpRSjhSOEhCakhpd0x5a1FuDQptc3Vuak03cUFJcjZESnZDYWdiTEZ3bXVZM0JvbTQ3Snk1MG5JaXAwQldUc3F1NElHa3NuWUgyeTFteHMNCitMK1lib3hObDh3ZlVkbHRRWFZrQzdlb2dKcXZSYktLT1d5cnNJbXBTVzNiR01ZV3daL2tvVnIxbTBFQQ0KNGh2dE9KZVpKNmhOK3lFRkZHcEg5bjdIRTlOWnRuRUdVNDlMdlFBRCtxNmRoRGRhSXhEQUFGaGhVYXl1DQpZWUFGQWJwT056dmtaa2xxZ3p4Vy9BbjVKOER3b2hsOWZMUEs1U1oxbHkvK0YwRXpOd0JhZ3BpdUVOV3kNCk03WGtnSXl3b0hwMnZDTTBHKytCNVVDRnk4a2VtM3EzYjBWcWNrOVJYWHdqNjhNV3VZY01USDlTbFd3Zw0KU2cxTzdDYUdqR3NPYTJwRGljSVcwRWdLMlREQ3dGOEVHQUVJQUFrRkFsd1BkbUVDR3d3QUNna1E0SFhnDQo2eEE5Wm5Dc2dBZ0F2aGtyZG5GcFpTT2lpSGtGbit5Vjk1ZVh0OVpwVVQvcFZXdThzWTBsRUFsMlVxdHkNClM5ODJlUkVhRlRSZWJGQkxmUUVNU1Q4YUFhQU9meXJNMVRGRVlCeUkxWWVXeW5QdEpBN3FtaUt2bHN3dw0KZ0w5N2o3eE5XZTRaTjg1WE9uZFRZYnpQVjdkNzd4RGJhblRXK2xFVWx4bHhHUTlVV2dPb240WWZWVVVzDQpDbGxRUFk0NktmUFpqbURHcEw1RmJFL2JvNjBuSlhXMGU5QUljV0pNa2Z4OTFnY1pXQ1h1aVUwcUpodmUNCkdsY05Ba211dmp2Yi92ZE80eHZBQ3Y2ejVxWEhIelN6bWZDTlFzRkNac1FnalBlZDREZkRvblBkMWVULw0KRXJVZmhYOUZvdVBSOFYzR2FmcFNWSGgwV1gvYkUvQ2RNelFmeHZDSGJkcVAvUlJMbzdwdmZ3PT0NCj03OVA3DQotLS0tLUVORCBQR1AgUFJJVkFURSBLRVkgQkxPQ0stLS0tLQ0K",
    passphrase: "YmVuQGV0ZS1scC1mZW5ueQ==",
};

export const encryptWithAES = (text) => {
    return CryptoJS.AES.encrypt(text, ENCRYPTATION_KEYS.passphrase).toString();
};

/**
 * Decrypts a text using a passphrase with AES.
 *
 * @param   {string} ciphertext Text to be decrypted.
 * @returns {string}            Dectypted text.
 */
export const decryptWithAES = (ciphertext) => {
    return CryptoJS.AES.decrypt(
        ciphertext,
        ENCRYPTATION_KEYS.passphrase
    ).toString(CryptoJS.enc.Utf8);
};
